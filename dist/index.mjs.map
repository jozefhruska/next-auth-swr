{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { Session } from 'next-auth';\nimport useSWR, { SWRConfiguration, SWRResponse } from 'swr';\nimport { UseSessionOptions as OriginalUseSessionOptions } from 'next-auth/react';\n\nconst fetcher = (url: string): Promise<Session | null> => {\n  return fetch(url).then(async (response) => {\n    const session = await response.json();\n\n    if (Object.keys(session).length) {\n      return session;\n    }\n\n    return null;\n  });\n};\n\nexport interface UseSessionOptions<R extends boolean>\n  extends Partial<OriginalUseSessionOptions<R>> {\n  config?: SWRConfiguration<Session | null>;\n}\n\nexport const useSession = <R extends boolean>(\n  options?: UseSessionOptions<R>\n): SWRResponse<Session | null> => {\n  const { required, onUnauthenticated, config: swrConfig } = options ?? {};\n\n  return useSWR<Session | null>('/api/auth/session', fetcher, {\n    ...swrConfig,\n    onSuccess: (data, key, config) => {\n      if (typeof swrConfig?.onSuccess === 'function') {\n        swrConfig.onSuccess(data, key, config);\n      }\n\n      if (required && !data) {\n        return;\n      }\n\n      if (typeof onUnauthenticated === 'function') {\n        onUnauthenticated();\n      }\n    },\n    onError: (data, key, config) => {\n      if (typeof swrConfig?.onError === 'function') {\n        swrConfig.onError(data, key, config);\n      }\n\n      if (required && !data) {\n        return;\n      }\n\n      if (typeof onUnauthenticated === 'function') {\n        onUnauthenticated();\n      }\n    },\n  });\n};\n"],
  "mappings": "0nBACA,mBAGA,GAAM,GAAU,AAAC,GACR,MAAM,CAAG,EAAE,KAAK,AAAO,GAAa,0BACzC,GAAM,GAAU,KAAM,GAAS,KAAK,EAEpC,MAAI,QAAO,KAAK,CAAO,EAAE,OAChB,EAGF,IACT,EAAC,EAQU,EAAa,AACxB,GACgC,CAChC,GAAM,CAAE,WAAU,oBAAmB,OAAQ,GAAc,UAAW,CAAC,EAEvE,MAAO,GAAuB,oBAAqB,EAAS,OACvD,GADuD,CAE1D,UAAW,CAAC,EAAM,EAAK,IAAW,CAKhC,AAJI,MAAO,kBAAW,YAAc,YAClC,EAAU,UAAU,EAAM,EAAK,CAAM,EAGnC,KAAY,CAAC,IAIb,MAAO,IAAsB,YAC/B,EAAkB,CAEtB,EACA,QAAS,CAAC,EAAM,EAAK,IAAW,CAK9B,AAJI,MAAO,kBAAW,UAAY,YAChC,EAAU,QAAQ,EAAM,EAAK,CAAM,EAGjC,KAAY,CAAC,IAIb,MAAO,IAAsB,YAC/B,EAAkB,CAEtB,CACF,EAAC,CACH",
  "names": []
}
